<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FreeDraw"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="AntFu7.FreeDraw.MainWindow"
        mc:Ignorable="d" ResizeMode="NoResize" UseLayoutRounding="True" WindowStartupLocation="CenterScreen" WindowState="Maximized" Background="#11000000" AllowsTransparency="True" WindowStyle="None" Title="Free Draw Dev" Icon="Rescoures/icon.ico" Topmost="True" >
    <Window.Resources>
        <SolidColorBrush x:Key ="FakeTransparent" Color="#01000000"/>
        <SolidColorBrush x:Key="SemitransparentGray" Color="#7F727272" />
        <SolidColorBrush x:Key="FunctionalButtonBackground" Color="#7F000000" />
        <SolidColorBrush x:Key="FunctionalButtonHover" Color="#7F212121" />
        <SolidColorBrush x:Key="FunctionalButtonActive" Color="#7F515151" />
        <SolidColorBrush x:Key="PaintingColor1" Color="#FF86E238"/>
        <SolidColorBrush x:Key="PaintingColor2" Color="#FF38E2A8"/>
        <SolidColorBrush x:Key="PaintingColor3" Color="#FF359EC9"/>
        <SolidColorBrush x:Key="PaintingColor4" Color="#FF7E7E7E"/>
        <SolidColorBrush x:Key="PaintingColor5" Color="#FFE2CF38"/>
        <SolidColorBrush x:Key="PaintingColor6" Color="#FF7855D4"/>
        <SolidColorBrush x:Key="PaintingColor7" Color="#FFD570C2"/>
        <SolidColorBrush x:Key="PaintingColor8" Color="#FFD6D6D6"/>
        <SolidColorBrush x:Key="PaintingColor9" Color="#FFE27F38"/>
        <SolidColorBrush x:Key="PaintingColor10" Color="#FFDF2828"/>
        <SolidColorBrush x:Key="PaintingColor11" Color="#FFE2386D"/>
        <SolidColorBrush x:Key="PaintingColor12" Color="#FF1E1E1E"/>
        <Style x:Key="ButtonContent" TargetType="{x:Type ContentPresenter}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="FunctionalButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource FunctionalButtonBackground}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="TextElement.Foreground" Value="White" />
            <Setter Property="TextElement.FontSize" Value="10" />
            <Setter Property="TextElement.FontFamily" Value="Consolas" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter Style="{StaticResource ButtonContent}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource FunctionalButtonHover}"/>
                </Trigger>
                <Trigger Property="Tag" Value="Actived">
                    <Setter Property="Background" Value="{StaticResource FunctionalButtonActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColorPicker" TargetType="{x:Type Button}">
            <Setter Property="TextElement.Foreground" Value="White" />
            <Setter Property="TextElement.FontSize" Value="10" />
            <Setter Property="TextElement.FontFamily" Value="Consolas" />
            <Setter Property="Cursor" Value="Pen"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                            <ContentPresenter Style="{StaticResource ButtonContent}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
                <Trigger Property="Tag" Value="Selected">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Path Fill="White" Stretch="Uniform" Height="12" Data="{DynamicResource IconChecked}">
                                <Path.Effect>
                                    <DropShadowEffect ShadowDepth="1" Color="#FF343434"/>
                                </Path.Effect>
                            </Path>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <InkCanvas x:Name="MainInkCanvas" Background="{x:Null}" MoveEnabled="False" ResizeEnabled="False">
            <InkCanvas.DefaultDrawingAttributes>
                <DrawingAttributes Color="#FFFF5656" FitToCurve="True" Height="5" IgnorePressure="False" IsHighlighter="False" StylusTip="Ellipse" StylusTipTransform="Identity" Width="5"/>
            </InkCanvas.DefaultDrawingAttributes>
        </InkCanvas>
        <Canvas>
            <Grid x:Name="Palette" HorizontalAlignment="Left" VerticalAlignment="Top" Width="310" MouseMove="Palette_MouseMove" MouseUp="Palette_MouseUp" MouseLeave="Palette_MouseLeave" Canvas.Top="15" Canvas.Left="15">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50" Background="{StaticResource FakeTransparent}">
                    <StackPanel.Effect>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="5" Opacity="0.5"/>
                    </StackPanel.Effect>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Button x:Name="DetialToggler" Style="{StaticResource FunctionalButton}" Padding="0" HorizontalAlignment="Left" Background="{StaticResource FakeTransparent}" VerticalAlignment="Center" Click="DetialToggler_Click">
                            <Path Fill="White" Stretch="Uniform" Width="8" Data="{DynamicResource IconArrow}" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="DetialTogglerRotate" Angle="270"/>
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                        <Border x:Name="PaletteGrip" Background="{StaticResource SemitransparentGray}" Width="120" Height="20" CornerRadius="5" Cursor="SizeAll" MouseDown="PaletteGrip_MouseDown"  HorizontalAlignment="Left" Margin="20,0,30,0" >
                            <TextBlock x:Name="InfoBox" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" FontFamily="Consolas" Margin="0,0,0,2"/>
                        </Border>
                        <Button x:Name="CloseButton" Style="{StaticResource FunctionalButton}" Padding="0"  Background="#FFFF7774" HorizontalAlignment="Right" Click="CloseButton_MouseDown" Width="20" Height="20" >
                            <Path Fill="White" Stretch="Uniform" Height="9" Data="{DynamicResource IconCross}"/>
                        </Button>
                    </Grid>
                    <WrapPanel Margin="0,10,0,0">
                        <WrapPanel.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ColorPicker}"/>
                        </WrapPanel.Resources>
                        <Button Background="{StaticResource PaintingColor1}"  Click="ColorSelector_MouseDown" x:Name="DefaultColor"/>
                        <Button Background="{StaticResource PaintingColor2}" Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor3}"  Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor4}" Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor5}" Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor6}" Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor7}" Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor8}" Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor9}"  Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor10}"  Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor11}"  Click="ColorSelector_MouseDown"/>
                        <Button Background="{StaticResource PaintingColor12}"  Click="ColorSelector_MouseDown"/>
                    </WrapPanel>
                    <Grid x:Name="SliderPanel" Margin="0,10,0,0">
                        <Border Background="{StaticResource SemitransparentGray}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="20" Height="20" Margin="0,0,5,0" CornerRadius="3">
                            <Border x:Name="brushPreview" Width="5" Height="5" Background="#FFD6D6D6" CornerRadius="15"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Slider Margin="5,0,30,0" Minimum="1" SmallChange="0.02" Value="2" ValueChanged="Slider_ValueChanged" LargeChange="0.1" IsMoveToPointEnabled="True" IsSelectionRangeEnabled="True" Focusable="False" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Maximum="5" />
                    </Grid>
                    <WrapPanel x:Name="ButtonPanel" HorizontalAlignment="Center" Margin="0,10,0,0">
                        <WrapPanel.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FunctionalButton}">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Width" Value="35"/>
                                <Setter Property="Height" Value="35"/>
                            </Style>
                            <Style TargetType="Path">
                                <Setter Property="Fill" Value="White"/>
                                <Setter Property="Stretch" Value="Uniform"/>
                                <Setter Property="Width" Value="15"/>
                            </Style>
                        </WrapPanel.Resources>
                        <Button x:Name="UndoButton" Click="UndoButton_MouseDown">
                            <Path Data="{DynamicResource IconUndo}"/>
                        </Button>
                        <Button x:Name="RedoButton" Padding="0" Height="35" Width="35">
                            <Path Data="{DynamicResource IconUndo}" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="-1"/>
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                        <Button x:Name="EraserButton" Click="EraserButton_MouseDown">
                            <Path Data="{DynamicResource IconEraser}"/>
                        </Button>
                        <Button x:Name="ClearButton" Click="ClearButton_MouseDown" ToolTip="Clear screen" >
                            <Path Data="{DynamicResource IconTrashBox}" Width="13"/>
                        </Button>
                        <Button x:Name="SaveButton" Click="SaveButton_MouseDown" ToolTip="Save">
                            <Path Data="{DynamicResource IconSave}" Width="14"/>
                        </Button>
                        <Button x:Name="LoadButton" Click="LoadButton_MouseDown" ToolTip="Load">
                            <Path Data="{DynamicResource IconLoad}" Width="14"/>
                        </Button>
                        <Button Content="Export" x:Name="ExportButton" ToolTip="Export as Image"/>
                        <Button Content="Minimize" x:Name="MinimizeButton" Click="MinimizeButton_MouseDown"  ToolTip="Minimize Free Draw" />
                        <Button Content="Enabled" x:Name="EnableButton" Click="EnableButton_MouseDown"/>
                    </WrapPanel>
                </StackPanel>
            </Grid>
        </Canvas>
    </Grid>
</Window>
