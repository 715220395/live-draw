<Application x:Class="FreeDraw.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FreeDraw"
             xmlns:freeDraw="clr-namespace:AntFu7.FreeDraw"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="IconDataDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="FakeTransparentColor" >#01000000</Color>
            <Color x:Key="TrueTransparentColor" >Transparent</Color>
            <Color x:Key="QuartertransparentGrayColor">#3F727272</Color>
            <Color x:Key="SemitransparentGrayColor">#7F727272</Color>
            <Color x:Key="TriquartertransparentGrayColor" >#3F727272</Color>
            <Color x:Key="FunctionalButtonBackgroundColor" >#7F000000</Color>
            <Color x:Key="FunctionalButtonHoverColor" >#7F212121</Color>
            <Color x:Key="FunctionalButtonActiveColor" >#7F515151</Color>

            <SolidColorBrush x:Key="FakeTransparent" Color="{StaticResource FakeTransparentColor}"/>
            <SolidColorBrush x:Key="TrueTransparent" Color="{StaticResource TrueTransparentColor}"/>
            <SolidColorBrush x:Key="QuartertransparentGray" Color="{StaticResource QuartertransparentGrayColor}" />
            <SolidColorBrush x:Key="SemitransparentGray" Color="{StaticResource SemitransparentGrayColor}" />
            <SolidColorBrush x:Key="TriquartertransparentGray" Color="{StaticResource TriquartertransparentGrayColor}" />
            <SolidColorBrush x:Key="FunctionalButtonBackground" Color="{StaticResource FunctionalButtonBackgroundColor}" />
            <SolidColorBrush x:Key="FunctionalButtonHover" Color="{StaticResource FunctionalButtonHoverColor}" />
            <SolidColorBrush x:Key="FunctionalButtonActive" Color="{StaticResource FunctionalButtonActiveColor}" />

            <Duration x:Key="Duration1">0:0:0:0.1</Duration>
            <Duration x:Key="Duration2">0:0:0:0.2</Duration>
            <Duration x:Key="Duration3">0:0:0:0.3</Duration>
            <Duration x:Key="Duration4">0:0:0:0.4</Duration>
            <Duration x:Key="Duration5">0:0:0:0.5</Duration>
            <Duration x:Key="Duration10">0:0:0:1</Duration>

            <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <Grid>
                        <Border x:Name="TrackBackground" Height="4.0" Margin="5,0" VerticalAlignment="center" Background="#FFB7B7B7" CornerRadius="1"/>
                        <Track x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Focusable="False" Height="13" Foreground="{TemplateBinding Foreground}" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="{Binding RelativeSource={RelativeSource Self},Path=Height}">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Border CornerRadius="10" Background="#FF6B6B6B"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard TargetName="Thumb" TargetProperty="Height">
                                    <DoubleAnimation Duration="{StaticResource Duration1}" To="16"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard TargetName="Thumb" TargetProperty="Height">
                                    <DoubleAnimation Duration="{StaticResource Duration3}" To="13"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ButtonContent" TargetType="{x:Type ContentPresenter}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="FunctionalButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource FunctionalButtonBackground}"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="TextElement.Foreground" Value="White" />
                <Setter Property="TextElement.FontSize" Value="10" />
                <Setter Property="TextElement.FontFamily" Value="Consolas" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter Style="{StaticResource ButtonContent}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource FunctionalButtonHoverColor}" Duration="{StaticResource Duration5}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource FunctionalButtonBackgroundColor}" Duration="{StaticResource Duration5}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="Tag" Value="Actived">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource FunctionalButtonActiveColor}" Duration="{StaticResource Duration5}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource FunctionalButtonBackgroundColor}" Duration="{StaticResource Duration5}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ColorPicker" TargetType="{x:Type Button}">
                <Setter Property="TextElement.Foreground" Value="White" />
                <Setter Property="TextElement.FontSize" Value="10" />
                <Setter Property="TextElement.FontFamily" Value="Consolas" />
                <Setter Property="Cursor" Value="Pen"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="ControlBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                                    <Path x:Name="CheckedIcon" Fill="White" Stretch="Uniform" Height="0" Data="{DynamicResource IconChecked}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard TargetName="ControlBorder" TargetProperty="CornerRadius">
                                                <freeDraw:CornerRadiusAnimation Duration="{StaticResource Duration1}" To="10"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard TargetName="ControlBorder" TargetProperty="CornerRadius">
                                                <freeDraw:CornerRadiusAnimation Duration="{StaticResource Duration4}" To="15"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Tag" Value="Actived">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard TargetName="CheckedIcon" TargetProperty="Height">
                                                <DoubleAnimation To="12" Duration="{StaticResource Duration1}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard TargetName="CheckedIcon" TargetProperty="Height">
                                                <DoubleAnimation To="0" Duration="{StaticResource Duration3}"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ResponseButtonTemplate" TargetType="Button">
                <Grid Background="{StaticResource FakeTransparent}">
                    <Border x:Name="Backborder" Background="{TemplateBinding Background}" CornerRadius="5" Width="0" Height="{Binding Path=Width,RelativeSource={RelativeSource Self}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Backborder" Storyboard.TargetProperty="Width" From="0" To="20" Duration="{StaticResource Duration3}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Backborder" Storyboard.TargetProperty="Width" From="20"  To="0" Duration="{StaticResource Duration3}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style  x:Key="ResponseButton" TargetType="Button">
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value ="25"/>
                <Setter Property ="Template" Value="{StaticResource ResponseButtonTemplate}"/>
            </Style>
            <Style x:Key="SpinningButton" TargetType="Button" BasedOn="{StaticResource ResponseButton}">
                <Setter Property="MaxWidth" Value ="360"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard >
                                    <DoubleAnimation Storyboard.TargetProperty="MaxWidth" From="360" To="540" Duration="{StaticResource Duration5}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="MaxWidth" From="360" To="540" Duration="{StaticResource Duration5}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
